@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (!IsUserAuthenticated)
{
    <!-- Full-Screen Login Overlay -->
    <div class="full-screen-overlay">
        <Login />
    </div>
}
else
{
    <!-- Main App Layout -->
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row px-4 d-flex justify-content-between">
                <a href="/">Home</a>
                <button class="btn btn-danger" @onclick="Logout">Logout</button>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
}

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool IsUserAuthenticated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsUserAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private void Logout()
    {
        Navigation.NavigateTo("/auth/logout", true);
    }
}